# Generated by Django 4.2.11 on 2024-12-21 23:51

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Баннер',
                'verbose_name_plural': 'Баннеры',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Заголовок')),
                ('image', models.ImageField(upload_to='main_page/blog_posts/', verbose_name='Изображение')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Пост блога',
                'verbose_name_plural': 'Посты блога',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=300, null=True, region=None, verbose_name='Телефон')),
                ('phone2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=300, null=True, region=None, verbose_name='Телефон 2')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Адрес')),
                ('work_time', models.CharField(blank=True, max_length=300, null=True, verbose_name='Время работы')),
                ('instagram_image', models.ImageField(blank=True, null=True, upload_to='main_page/instagram/', verbose_name='Изображение Instagram')),
                ('instagram_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на Instagram')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
                ('icon', models.FileField(upload_to='main_page/deliveries/', verbose_name='Иконка')),
            ],
            options={
                'verbose_name': 'Доставка',
                'verbose_name_plural': 'Доставки',
            },
        ),
        migrations.CreateModel(
            name='DenialOfResponsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'Отказ от ответственности',
                'verbose_name_plural': 'Отказ от ответственности',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=350, verbose_name='Вопрос')),
                ('answer', models.TextField(verbose_name='Ответ')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='Сортировка')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='InfoBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
                ('image', models.ImageField(upload_to='main_page/info_blocks/', verbose_name='Иконка')),
            ],
            options={
                'verbose_name': 'Информационный блок',
                'verbose_name_plural': 'Информационный блок',
            },
        ),
        migrations.CreateModel(
            name='Requisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=255, verbose_name='Название банка')),
                ('text', models.CharField(max_length=255, verbose_name='Содержание')),
                ('owner_name', models.CharField(max_length=255, verbose_name='Реквизиты получателя')),
            ],
            options={
                'verbose_name': 'Реквизит',
                'verbose_name_plural': 'Реквизиты',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='ФИО')),
                ('icon', models.FileField(blank=True, null=True, upload_to='main_page/reviews/', verbose_name='Иконка')),
                ('review', models.TextField(verbose_name='Текст')),
                ('rating', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='Сортировка')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=350, verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'Бегущая строка',
                'verbose_name_plural': 'Бегущие строки',
            },
        ),
        migrations.CreateModel(
            name='ContactSocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='Ссылка')),
                ('type', models.CharField(choices=[('telegram', 'Telegram'), ('instagram', 'Instagram'), ('tiktok', 'TikTok'), ('whatsapp', 'WhatsApp')], max_length=20, unique=True, verbose_name='Тип')),
                ('icon', models.FileField(blank=True, null=True, upload_to='main_page/social_media/', verbose_name='Иконка')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socials', to='contents.contact')),
            ],
            options={
                'verbose_name': 'Социальная сеть',
                'verbose_name_plural': 'Социальные сети',
            },
        ),
        migrations.CreateModel(
            name='BannerImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='banners/', verbose_name='Изображение')),
                ('banner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='contents.banner')),
            ],
            options={
                'verbose_name': 'Изображение баннера',
                'verbose_name_plural': 'Изображения баннеров',
            },
        ),
    ]
