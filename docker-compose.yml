version: "3.9"

services:
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - static_volume:/vitamins-backend/staticfiles
      - media_volume:/vitamins-backend/media
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - vitamins-backend
      - telegram-bot
      - frontend
    restart: always

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://176.124.212.65/api
    restart: always
    depends_on:
      - vitamins-backend

  vitamins-backend:
    container_name: vitamins-backend
    build:
      context: backend
      network: host
    extra_hosts:
      - "pypi.org:151.101.1.63"
      - "files.pythonhosted.org:151.101.1.63"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    expose:
      - "8000"
    restart: always
    entrypoint: /entrypoint.sh
    volumes:
      - ./backend:/vitamins-backend
      - static_volume:/vitamins-backend/staticfiles
      - media_volume:/vitamins-backend/media
    depends_on:
      - vitamins-db
      - redis
    command: ["healthy-check.sh", "vitamins-db:5432"]
    environment:
      - TZ=Asia/Bishkek

  telegram-bot:
    container_name: telegram-bot
    build:
      context: backend
      dockerfile: Dockerfile
    extra_hosts:
      - "pypi.org:151.101.1.63"
      - "files.pythonhosted.org:151.101.1.63"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    expose:
      - "8001"
    restart: always
    entrypoint: /entrypoint_bot.sh
    volumes:
      - ./backend:/telegram-bot
    depends_on:
      - vitamins-db
      - redis
    command: ["healthy-check.sh", "vitamins-db:5432"]
    environment:
      - TZ=Asia/Bishkek

  vitamins-db:
    container_name: vitamins-db
    image: postgres:latest
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - ../vitamin_backup.sql:/docker-entrypoint-initdb.d/vitamin_backup.sql
    env_file: backend/.env
    environment:
      - POSTGRES_DB=vitamins
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  static_volume:
  media_volume:
  pgdata:
  redis_data: